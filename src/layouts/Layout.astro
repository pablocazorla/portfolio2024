---
import { ClientRouter } from "astro:transitions";
import "./base.css";
import Header from "@/components/header/index.astro";
import Footer from "@/components/footer/index.astro";
import dataSite from "@/data/data.json";
import Opentowork from "@/components/open-to-work/index.astro";
import { getOgImage, getOgUrl, getOgLogo } from "./getOgImage";

interface Props {
  title?: string;
  description?: string;
  image?: string;
  es?: boolean;
}

const title = Astro.props.title
  ? `${Astro.props.title} | ${dataSite.doctitle}`
  : `${dataSite.doctitle}`;

const descriptionRaw = Astro.props.description ?? dataSite.description;

const description = descriptionRaw.replace(/<[^>]+>/g, "");

const image = await getOgImage(
  Astro.props.image ?? `header/${dataSite.headerContent.mainImage}`
);

const { es } = Astro.props;

const ogUrl = getOgUrl(Astro.url.pathname);
const ogLogo = getOgLogo();
---

<!doctype html>
<html lang={es ? "es" : "en"}>
  <head>
    <meta charset="UTF-8" />

    <title>{title}</title>
    <meta name="description" content={description} />

    <!-- Facebook Meta Tags -->
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={image} />
    <meta property="og:url" content={ogUrl} />
    <meta property="og:site_name" content={dataSite.doctitle} />
    <meta property="og:logo" content={ogLogo} />
    <meta property="og:type" content={dataSite.og_type} />

    <!-- Twitter Meta Tags -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={description} />
    <meta name="twitter:image" content={image} />

    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <meta
      name="viewport"
      content="width=device-width, initial-scale=1, maximum-scale=5"
    />

    <link
      rel="apple-touch-icon"
      sizes="57x57"
      href="/favicon/apple-icon-57x57.png"
    />
    <link
      rel="apple-touch-icon"
      sizes="60x60"
      href="/favicon/apple-icon-60x60.png"
    />
    <link
      rel="apple-touch-icon"
      sizes="72x72"
      href="/favicon/apple-icon-72x72.png"
    />
    <link
      rel="apple-touch-icon"
      sizes="76x76"
      href="/favicon/apple-icon-76x76.png"
    />
    <link
      rel="apple-touch-icon"
      sizes="114x114"
      href="/favicon/apple-icon-114x114.png"
    />
    <link
      rel="apple-touch-icon"
      sizes="120x120"
      href="/favicon/apple-icon-120x120.png"
    />
    <link
      rel="apple-touch-icon"
      sizes="144x144"
      href="/favicon/apple-icon-144x144.png"
    />
    <link
      rel="apple-touch-icon"
      sizes="152x152"
      href="/favicon/apple-icon-152x152.png"
    />
    <link
      rel="apple-touch-icon"
      sizes="180x180"
      href="/favicon/apple-icon-180x180.png"
    />
    <link
      rel="icon"
      type="image/png"
      sizes="192x192"
      href="/favicon/android-icon-192x192.png"
    />
    <link
      rel="icon"
      type="image/png"
      sizes="32x32"
      href="/favicon/favicon-32x32.png"
    />
    <link
      rel="icon"
      type="image/png"
      sizes="96x96"
      href="/favicon/favicon-96x96.png"
    />
    <link
      rel="icon"
      type="image/png"
      sizes="16x16"
      href="/favicon/favicon-16x16.png"
    />
    <link rel="manifest" href="/favicon/manifest.json" />
    <meta name="msapplication-TileColor" content="#0f0b14" />
    <meta
      name="msapplication-TileImage"
      content="/favicon/ms-icon-144x144.png"
    />
    <meta name="theme-color" content="#0f0b14" />

    <!-- Google tag (gtag.js) -->
    <!--     <script async src="https://www.googletagmanager.com/gtag/js?id=G-ZRGW71KDRT"
    ></script>
    <script>
      window.dataLayer = window.dataLayer || [];
      function gtag() {
        dataLayer.push(arguments);
      }
      gtag("js", new Date());

      gtag("config", "G-ZRGW71KDRT");
    </script>
 -->
    <ClientRouter />
  </head>
  <body>
    <Header es={es} />
    <main class="main-wrap" data-lang={es ? "es" : "en"}>
      <slot />
      <Footer es={es} />
    </main>
    <Opentowork es={es} />
  </body>
</html>

<style is:global>
  @font-face {
    font-family: "Montserrat";
    src: url("/fonts/montserrat.woff2") format("woff2");
    font-style: normal;
    font-display: swap;
  }

  @font-face {
    font-family: "Montserrat";
    src: url("/fonts/montserrat-italic.woff2") format("woff2");
    font-style: italic;
    font-display: swap;
  }

  body {
    position: relative;
    font-family: "Montserrat", sans-serif;
    overflow-x: hidden;
    background-color: rgb(var(--background-dark));
    color: rgb(var(--color-dark));
  }
  @keyframes btn-content-pulse {
    0% {
      transform: scale(1);
    }
    50% {
      transform: scale(1.2);
    }
    100% {
      transform: scale(1);
    }
  }

  html,
  body {
    overflow: hidden;
    text-rendering: optimizeSpeed;
  }

  .main-wrap {
    position: relative;
    width: 100dvw;
    height: 100dvh;
    overflow-x: hidden;
    /* scroll-snap-type: y mandatory; */
    scroll-behavior: smooth;
    transform-origin: 0 0;
    transition: opacity 0.4s ease-in-out;

    -ms-overflow-style: none; /* IE and Edge */
    scrollbar-width: none; /* Firefox */
    &::-webkit-scrollbar {
      display: none;
    }

    &.open-menu {
      overflow-y: hidden;
      opacity: 0;
    }
  }

  .bg-square {
    background-image: url("/img/assets/bg-squares.svg");
    background-position: center;
  }
</style>

<script>
  import { detectBrowserLanguage } from "@/i18n/utils";

  const mainWrap = document.querySelector(".main-wrap") ?? {
    dataset: { lang: "en" },
  };

  detectBrowserLanguage(mainWrap?.dataset?.lang ?? "en");
</script>
