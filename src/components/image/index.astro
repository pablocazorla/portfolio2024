---
interface Props {
  alt: string;
  src: string;
  class: string;
  name: string;
  lazy?: boolean;
  now?: boolean;
}

const { alt, src, name, class: className, lazy, now } = Astro.props;

const extension = "webp";
const windowScale = [500, 800, 1300];
const scales = [400, 760, 900, 1300];

const sizes = scales
  .map((scale, i) => {
    if (i === scales.length - 1) {
      return `${scale}px`;
    }

    return `(max-width: ${windowScale[i]}) ${scale}px`;
  })
  .join(", ");

const srcset = scales
  .map((scale) => {
    return `${src}/${name}_${scale}.${extension} ${scale}w`;
  })
  .join(", ");
---

<img
  sizes={sizes}
  srcset={srcset}
  src={`${src}/${name}_${scales[scales.length - 1]}.${extension}`}
  alt={alt}
  class={className}
  loading={lazy ? "lazy" : now ? "eager" : null}
  width="1300"
/>
