---
import Container from "@/components/container/index.astro";
import Image from "@/components/image/index.astro";
import Button from "@/components/button/index.astro";
import dataSite from "@/data/data.json";

const { es } = Astro.props;

const title = "Pablo Cazorla";
const thumbnail = "rosina";
---

<nav class="fixed top-6 right-10 nav-btn flex items-center gap-4 main-nav-btn">
  <Button
    type="button"
    color="main-menu"
    className="opacity-90 hover:opacity-100"
  >
    <div class="font-bold text-xl pr-3">{title}</div>
    <div class="icon-menu">
      <div class="n n-1"></div>
      <div class="n n-2"></div>
      <div class="n n-3"></div>
    </div>
  </Button>
</nav>

<header class="fixed top-0 left-0 w-full main-header">
  <a
    href={es ? "/" : "/es"}
    class="absolute z-50 block top-20 right-16 pt-2 lr-1 text-sm a-lang-switch"
    data-langtoswitch={es ? "en" : "es"}
  >
    {es ? "Switch to English" : "Sitio en Espa√±ol"}
  </a>
  <div class="main-header-content flex flex-col justify-center">
    <Container>
      <div class="flex items-center justify-center menu-content">
        <picture
          class="hidden sm:block aspect-square overflow-hidden menu-thumbnail-container"
        >
          <Image
            src="/img/about"
            name={dataSite.myImages.header}
            alt={title}
            class="object-cover w-full h-full rounded-3xl"
          />
        </picture>
        <menu class="min-w-[50dvh]">
          <ul class="menu-ul text-center sm:text-left">
            {
              Object.values(dataSite.sitemap).map((elem) => {
                if (!elem.showInMenu) {
                  return null;
                }
                const { title, shortDescription, url } = es ? elem.es : elem;
                return (
                  <li>
                    <a href={url}>
                      <div class="menu-item-title">{title}</div>
                      <div class="menu-item-description">
                        {shortDescription}
                      </div>
                    </a>
                  </li>
                );
              })
            }
          </ul>
        </menu>
      </div>
    </Container>
  </div>
</header>

<style>
  .nav-btn {
    --h: 1px;
    --icon-h: 20px;

    xmix-blend-mode: difference;
    color: #fff;
    cursor: pointer;
    transition: letter-spacing 0.12s ease-in-out;
    z-index: 1001;

    .icon-menu {
      position: relative;
      width: 24px;
      height: var(--icon-h);
    }

    .n {
      height: calc(var(--h) * 2);
      background-color: rgb(var(--color-primary));
      position: absolute;
      left: 0;
      width: 100%;
      transition: transform 0.3s ease-in-out;

      &.n-1 {
        top: 0;
      }
      &.n-2 {
        top: calc(50% - var(--h));
      }
      &.n-3 {
        bottom: 0;
      }
    }

    &.open-menu {
      .n-1 {
        transform: translateY(calc(0.5 * var(--icon-h) - var(--h)))
          rotate(45deg);
      }
      .n-2 {
        transform: scale(0, 1);
      }
      .n-3 {
        transform: translateY(calc(var(--h) - 0.5 * var(--icon-h)))
          rotate(-45deg);
      }
    }

    &:hover {
      xletter-spacing: 0.04rem;
    }
  }
  .main-header {
    background-color: rgb(var(--background-dark));
    color: #fff;
    overflow: hidden;
    height: 0;
    z-index: 1000;
    transition: height 0.5s ease-in-out;

    .main-header-content {
      width: 100%;
      height: 100vh;
      opacity: 0;
      transform: translateY(-30dvh);
      transition: all 0.5s ease-in-out;
    }

    &.open-menu {
      height: 100vh;
      .main-header-content {
        opacity: 1;
        transition: all 0.6s 0.1s ease-in-out;
        transform: translateY(0);
      }
    }
  }
  .a-lang-switch {
    opacity: 0.6;
    transition: opacity 0.1s ease-in-out;

    &:hover {
      opacity: 1;
    }
  }
  .menu-content {
    gap: 6dvw;
  }
  .menu-ul {
    display: flex;
    flex-direction: column;
    gap: 5dvh;

    a {
      display: block;
      transition: opacity 0.1s ease-in-out;

      &:hover {
        opacity: 0.5;
      }
    }
  }
  .menu-thumbnail-container {
    width: min(60dvh, 40dvw);
  }
  .menu-item-title {
    text-transform: uppercase;
    font-size: min(7dvh, 6dvw);
    line-height: 1;
  }
  .menu-item-description {
    text-wrap: balance;
    padding: 0 2px;
    opacity: 0.5;
    font-size: min(1em, 4dvw);
  }
</style>
<script>
  import $ from "@/js/utils";
  import { navigateToLanguage } from "@/i18n/utils";

  $.onAstroPageLoad(() => {
    const navBtn = $.sel(".nav-btn");
    const mainHeader = $.sel(".main-header");

    if (navBtn && mainHeader) {
      let openMenu = false;

      const toggleMenu = () => {
        const mainWrap = $.sel(".main-wrap");
        if (openMenu) {
          openMenu = false;
          $.cl(navBtn).remove("open-menu");
          $.cl(mainHeader).remove("open-menu");
          if (mainWrap) {
            $.cl(mainWrap).remove("open-menu");
          }
        } else {
          openMenu = true;
          $.cl(navBtn).add("open-menu");
          $.cl(mainHeader).add("open-menu");
          if (mainWrap) {
            $.cl(mainWrap).add("open-menu");
          }
        }
      };

      $.ev(navBtn).on("click", toggleMenu);

      $.ev(document).on("astro:after-preparation", () => {
        if (openMenu) {
          toggleMenu();
        }
      });
    }
    const langSelector = $.sel(".a-lang-switch");
    if (langSelector) {
      $.ev(langSelector).on("click", (e) => {
        e.preventDefault();
        navigateToLanguage(e.target.dataset.langtoswitch);
      });
    }
  });
</script>
