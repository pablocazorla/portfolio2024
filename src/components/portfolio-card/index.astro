---
import ArrowRightIcon from "@/icons/arrow-right.astro";
import Image from "@/components/image/index.astro";
import dataSite from "@/data/data.json";

const { data, es, forHome } = Astro.props;
const { path, title, subtitle, thumbnail, skills, tags } = data;

const { url: urlBase } = es ? dataSite.sitemap.work.es : dataSite.sitemap.work;
---

<a href={`${urlBase}/${path}`} class="work-card">
  <picture
    class={`block shadow-xl rounded-xl overflow-hidden ${forHome ? "for-home-picture" : "for-work-picture"} work-thumbnail-container`}
    transition:name={`work-thumbnail-${path}`}
  >
    <Image
      src="/img/portfolio"
      name={thumbnail}
      alt={title}
      class="object-cover w-full h-full work-thumbnail"
      lazy
    />
  </picture>
  <div class="">
    <div class="uppercase text-orange-300 text-sm truncate pt-3 px-1">
      {[subtitle].concat(skills).concat(tags).join(" Â· ")}
    </div>
    <h3
      class="xfont-medium text-h3 flex items-center title sleading-none truncate"
      transition:name={`work-title-${path}`}
    >
      <span class="title-arrow text-orange-300"
        ><ArrowRightIcon size={25} /></span
      >
      <span class="">{title}</span>
    </h3>
  </div>
</a>

<style>
  .for-work-picture {
    aspect-ratio: 16 / 9;
  }
  .for-home-picture {
    height: 50dvh;
  }
  .work-card {
    display: block;
  }
  .work-thumbnail-container {
    position: relative;

    &:after {
      position: absolute;
      content: "";
      display: block;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: #00000036;
      opacity: 0;
      transition: opacity 0.2s ease-in-out;
    }
  }
  .work-thumbnail {
    transform: scale(1);
    transition: transform 0.2s ease-in-out;
  }
  .title {
    transition: opacity 0.5s ease-in-out;
  }
  .title-arrow {
    display: block;
    overflow: hidden;
    width: 0px;
    opacity: 0;
    transform: translateX(-10px);
    transition:
      transform 0.3s ease-in-out,
      width 0.3s ease-in-out,
      opacity 0.5s ease-in-out;
  }
  /* */
  .work-card:hover {
    .work-thumbnail-container {
      animation: work-thumbnail-perspective 0.7s ease-in-out;

      &:after {
        transition: opacity 0.6s ease-in-out;
        opacity: 1;
      }
    }
    .work-thumbnail {
      animation: work-thumbnail-blur 0.7s ease-in-out;
      transition: transform 0.7s ease-in-out;
      transform: scale(1.05);
    }
    .title {
      opacity: 1;
    }
    .title-arrow {
      width: 30px;
      opacity: 1;
      transform: translateX(0px);
    }
  }
  @keyframes work-thumbnail-perspective {
    0% {
      transform: perspective(1000px) rotateX(0deg) rotateY(0deg);
    }
    30% {
      transform: perspective(1000px) rotateX(-4deg) rotateY(-1deg);
    }
    100% {
      transform: perspective(1000px) rotateX(0deg) rotateY(0deg);
    }
  }

  @keyframes work-thumbnail-blur {
    0% {
      filter: blur(0px);
    }
    20% {
      filter: blur(3px);
    }
    90% {
      filter: blur(0px);
    }
  }
</style>
