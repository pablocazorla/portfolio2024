---
import Container from "@/components/container/index.astro";
import ScrollDownBanner from "@/components/scrollDownBanner/index.astro";
import ButtonsNav from "./buttons-nav.astro";
import I18n from "@/i18n/index.astro";
import Image from "@/components/image/index.astro";

const { work, es } = Astro.props;
const {
  title,
  subtitle,
  thumbnail,
  path,
  description_en,
  description_es,
  tags,
  skills,
} = work.data;

const description = es ? description_es : description_en;
---

<header
  class="relative min-h-[100dvh] flex flex-col justify-center text-white hero"
>
  <div
    class="block overflow-hidden absolute top-0 left-0 w-full h-full bg-black select-none bg-portfolio-picture blur-sm"
    transition:name={`work-thumbnail-${path}`}
  >
    <Image
      src={path}
      name={thumbnail}
      alt={title}
      class="object-cover w-full h-full opacity-40"
    />
  </div>
  <ScrollDownBanner
    class="absolute top-[100dvh] left-1/2 -translate-x-1/2 -translate-y-full"
    es={es}
  />
  <Container class="pt-[30dvh] pb-3 sm:pb-[10dvh] text-center sm:text-left">
    <h1 class="text-h1 font-medium leading-none mb-[2dvh] title">
      {title}
    </h1>
    <p
      class="text-description font-medium mb-[8dvh] px-3 subtitle text-pink-300 uppercase"
    >
      <I18n text={subtitle} es={es} />
    </p>
    {
      description.map((text, k) => {
        return (
          <p
            class={`text-white text-lead xl:w-2/3 text-balance leading-snug px-3 description ${k === description.length - 1 ? "mb-[10dvh]" : "mb-[4dvh]"}`}
            set:html={text}
          />
        );
      })
    }
    <nav class="mb-[14dvh] nav">
      <ButtonsNav work={work} es={es} />
    </nav>

    <div
      class="flex flex-wrap gap-[7dvw] justify-center sm:justify-start text-sublead leading-tight px-2 fade-in-b skills"
    >
      {
        [
          { tit: "Technologies", list: skills },
          { tit: "Sectors", list: tags },
        ].map(({ tit, list }) => {
          return (
            <div>
              <h2 class="font-bold mb-[2dvh] uppercase">
                <I18n text={tit} es={es} />
              </h2>
              <ul class="flex flex-col gap-[1dvh] capitalize text-orange-200">
                {list.map((elem) => (
                  <li>
                    <I18n text={elem} es={es} />
                  </li>
                ))}
              </ul>
            </div>
          );
        })
      }
    </div>
  </Container>
</header>

<style>
  .hero {
    overflow: hidden;
  }

  .title {
    animation: fade-in-trans-anim 0.4s 0.1s both ease-in-out;
  }

  .subtitle {
    animation: fade-in-trans-anim 0.4s 0.3s both ease-in-out;
  }

  /*   .description,
  .nav, */

  .description {
    a {
      color: #64b7ff;
      font-weight: bold;
      text-decoration: underline;
      transition: color 0.1s ease-in-out;
      display: inline-block;

      &.inline {
        display: inline;
      }

      &:hover {
        color: #0082f3;
      }
    }
    b {
      display: inline-block;
    }
  }

  .skills {
    animation: fade-in-anim both linear;
    animation-timeline: --scroll;
    animation-range: 100dvh 125dvh;
  }

  @keyframes fade-in-trans-anim {
    0% {
      opacity: 0;
      transform: translateY(4vh);
    }
    100% {
      opacity: 1;
      transform: translateY(0);
    }
  }
  @keyframes fade-in-anim {
    0% {
      opacity: 0;
    }
    100% {
      opacity: 1;
    }
  }
</style>

<script>
  import $ from "@/js/utils";

  $.onAstroPageLoad(() => {
    const navs = $.selAll(".nav-share");

    if (navs.length > 0) {
      navs.forEach((nav) => {
        const shareData = JSON.parse(nav.dataset.sharedata);
        const shareBtn = $.sel(".share-btn", nav);
        $.ev(shareBtn).on("click", async () => {
          try {
            await navigator.share(shareData);
          } catch (err) {}
        });
      });
    }
  });
</script>
