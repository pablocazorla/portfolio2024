---
import { getCollection } from "astro:content";
import Image from "@/components/image/index.astro";
import Button from "@/components/button/index.astro";
import ArrowLeftIcon from "@/icons/arrow-left.astro";
import ArrowRightIcon from "@/icons/arrow-right.astro";
import I18n from "@/i18n/index.astro";
import getI18nText from "@/i18n/getI18nText";
import dataSite from "@/data/data.json";

const workData = await getCollection("portfolio");

const { es } = Astro.props;

const { url: urlBase } = es ? dataSite.sitemap.work.es : dataSite.sitemap.work;
---

{
  workData
    .sort((a, b) => {
      if (a.data.order && b.data.order) {
        return a.data.order - b.data.order;
      }
      return 0;
    })
    .map(({ data }, k) => {
      const { title, subtitle, thumbnail, path, tags, skills } = data;
      return (
        <section
          class={`lab-section${k === 0 ? " active-from-right" : ""}`}
          data-title={title}
          data-subtitle={subtitle}
          data-list={skills.concat(tags).map((str)=>{
            return getI18nText(str,es);
          }).join(" · ")}
          data-url={`${urlBase}/${path}`}
        >
          <div
            class="block overflow-hidden absolute top-0 left-0 w-full h-full bg-black select-none"
            /* transition:name={`work-thumbnail-${path}`} */
          >
            <Image
              src={path}
              name={thumbnail}
              alt={title}
              class="object-cover w-full h-full lab-thumbnail opacity-40"
            />
          </div>
          <article>
            <header>
              <h2>{title}</h2>
              <p >
                {subtitle}
              </p>
              <p>{skills.concat(tags).join(" · ")}</p>
                
              
              <nav>
                <a
                  href={`${urlBase}/${path}`}
                >
                  <I18n es={es} text="View more" />
                </a>
              </nav>
            </header>
          </article>
        </section>
      );
    })
}

<section class="main-section">
  <div class="flex items-center justify-center">
    <nav class="lab-nav-btn-direction">
      <Button
        type="button"
        circular
        max
        color="transparent-white"
        className="lab-btn lab-btn-left"
      >
        <ArrowLeftIcon size={24} />
      </Button>
    </nav>
    <article class="lab-section-content text-center">
      <header class="lab-section-box">
        <nav class="lab-section-nav">
          {
            workData.map((_, k) => {
              return (
                <button class="lab-nav-btn" data-index={k}>
                  <div class="lab-nav-line">
                    <div class="lab-nav-line-inner" />
                  </div>
                </button>
              );
            })
          }
        </nav>

        <h2 class="text-h2 font-medium text-balance lab-title"></h2>
        <p class="text-xl font-light text-balance lab-subtitle pt-[1dvh]"></p>
        <div class="uppercase font-medium text-sm pt-[3dvh] lab-list text-orange-200"></div>
        <nav class="flex justify-center pt-[4dvh]">
            <Button href={`/`} color="transparent-primary" className="lab-url">
              <ArrowRightIcon size={16} />
              <I18n es={es} text="View more" />
            </Button>
        </nav>
      </header>
    </article>
    <nav class="lab-nav-btn-direction">
      <Button
        type="button"
        circular
        max
        color="transparent-white"
        className="lab-btn lab-btn-right"
      >
        <ArrowRightIcon size={24} />
      </Button>
    </nav>
  </div>
</section>

<style>
  .lab-section {
    position: absolute;
    top: 0;
    left: 0;
    width: 100dvw;
    height: calc(100dvh - var(--footer-height));
    min-height: calc(100dvh - var(--footer-height));
    overflow: hidden;
    display: flex;
    flex-direction: column;
    justify-content: center;
    transform: translateX(100%);

    .lab-section-content {
      display: none;
    }
  }
  .lab-section-content {
    position: relative;
    color: #fff;
  }
  .lab-section-box {
    width: min(600px, 80dvw);
    height: max(70dvh, 400px);
    margin: 0 auto;
    display: flex;
    flex-direction: column;
    justify-content: end;
    position: relative;
    padding: 0 8px;
  }

  .lab-nav-btn-direction {
    width: 10dvw;
  }
  .lab-btn {
    width: min(100px, 8dvw);
    height: min(100px, 8dvw);
    margin: 0 auto;
    opacity: 0.3;
    box-shadow: 0 0 20px rgba(0, 0, 0, 1);

    &.lab-btn-left {
      svg {
        position: relative;
        left: 3px;
      }
    }

    &:hover {
      opacity: 1;
    }
  }

  .lab-section-nav {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    display: flex;
    align-items: center;
    gap: 10px;

    button {
      --anim-duration: 6s;

      flex: 1 0 auto;
      padding: 5px 0;

      .lab-nav-line {
        width: 100%;
        height: 2px;
        background-color: #ffffff2c;

        .lab-nav-line-inner {
          width: 0%;
          height: 100%;
          background-color: #fff;

          &.animated {
            animation: lab-nav-line-animation var(--anim-duration) both linear;
          }

          &.completed {
            width: 100%;
          }
        }
      }
    }
  }
  @keyframes lab-nav-line-animation {
    0% {
      width: 0%;
    }
    100% {
      width: 100%;
    }
  }
  /*******************************/
  .main-section {
    position: relative;
    width: 100dvw;
    height: calc(100dvh - var(--footer-height));
    min-height: calc(100dvh - var(--footer-height));
    overflow: hidden;

    display: flex;
    flex-direction: column;
    justify-content: center;
  }
  .lab-section {
    --duration: 0.9s;
    --duration-img-scale: 60s;

    img {
      animation: scale-img-animation var(--duration-img-scale) infinite linear;
    }

    &.active-from-right {
      animation: active-from-right-animation var(--duration) both ease-in-out;
    }
    &.deactive-to-right {
      animation: deactive-to-right-animation var(--duration) both ease-in-out;
    }
    &.active-from-left {
      animation: active-from-left-animation var(--duration) both ease-in-out;
    }
    &.deactive-to-left {
      animation: deactive-to-left-animation var(--duration) both ease-in-out;
    }
  }

  @keyframes active-from-right-animation {
    0% {
      opacity: 0.5;
      transform: translateX(100%) scale(0.7) rotate(30deg);
      border-radius: 30dvh;
    }
    50% {
      border-radius: 30dvh;
    }
    100% {
      transform: translateX(0%);
      border-radius: 0dvh;
    }
  }
  @keyframes active-from-left-animation {
    0% {
      opacity: 0.5;
      transform: translateX(-100%) scale(0.7) rotate(-30deg);
      border-radius: 30dvh;
    }
    50% {
      border-radius: 30dvh;
    }
    100% {
      transform: translateX(0%);
    }
  }
  @keyframes deactive-to-right-animation {
    0% {
      transform: translateX(0%);
    }
    50% {
      border-radius: 20dvh;
    }
    100% {
      opacity: 0;
      transform: translateX(100%) scale(0.9) rotate(5deg);
      border-radius: 20dvh;
    }
  }
  @keyframes deactive-to-left-animation {
    0% {
      transform: translateX(0%);
    }
    50% {
      border-radius: 20dvh;
    }
    100% {
      opacity: 0;
      transform: translateX(-100%) scale(0.9) rotate(-5deg);
      border-radius: 20dvh;
    }
  }

  @keyframes scale-img-animation {
    0% {
      opacity: 0;
      transform: scale(1);
    }
    1% {
      opacity: 0.4;
    }
    99% {
      opacity: 0.4;
    }
    100% {
      opacity: 0;
      transform: scale(1.6);
    }
  }

  /*************************** */
  .lab-title {
    &.animFadeIn {
      animation: fadein-animation 0.5s 0.3s both ease-in-out;
    }
  }
  .lab-subtitle {
    &.animFadeIn {
      animation: fadein-animation 0.5s 0.35s both ease-in-out;
    }
  }
  .lab-list {
    &.animFadeIn {
      animation: fadein-animation 0.6s 0.5s both ease-in-out;
    }
  }
  .lab-url {
    &.animFadeIn {
      animation: fadein-animation 0.64s 0.6s both ease-in-out;
    }
  }
  @keyframes fadein-animation {
    0% {
      opacity: 0;
      transform: translateY(10dvh) scale(1, 0.6);
    }
    100% {
      opacity: 1;
      transform: translateY(0dvh) scale(1, 1);
    }
  }
</style>

<script>
  import $ from "@/js/utils";

  $.onAstroPageLoad(() => {
    const labSections = $.selAll(".lab-section");
    const labTitle = $.sel(".lab-title");
    const labSubtitle = $.sel(".lab-subtitle");
    const labList = $.sel(".lab-list");
    const labUrl = $.sel(".lab-url");
    const labNavBtns = $.selAll(".lab-nav-btn");

    if (
      labSections &&
      labTitle &&
      labSubtitle &&
      labList &&
      labUrl &&
      labNavBtns
    ) {
      let enableMoveSection = true;

      labSections.forEach((section) => {
        section.querySelector("article")?.remove();
      });

      /***********************/
      $.ev(labTitle).on("animationend", () => {
        $.cl(labTitle).remove("animFadeIn");
        if (!enableMoveSection) enableMoveSection = true;
      });
      $.ev(labSubtitle).on("animationend", () => {
        $.cl(labSubtitle).remove("animFadeIn");
        if (!enableMoveSection) enableMoveSection = true;
      });
      $.ev(labList).on("animationend", () => {
        $.cl(labList).remove("animFadeIn");
      });
      $.ev(labUrl).on("animationend", () => {
        $.cl(labUrl).remove("animFadeIn");
      });

      const updateInfoSection = ({ title, subtitle, list, url }) => {
        labTitle.textContent = title;
        $.cl(labTitle).add("animFadeIn");
        labSubtitle.textContent = subtitle;
        $.cl(labSubtitle).add("animFadeIn");
        labList.textContent = list;
        $.cl(labList).add("animFadeIn");
        labUrl.href = url;
        $.cl(labUrl).add("animFadeIn");
      };
      /***********************/

      const updateLines = (nextSection) => {
        labNavBtns.forEach((btn, i) => {
          const line = btn.querySelector(".lab-nav-line-inner");

          if (i > nextSection) {
            line.className = "lab-nav-line-inner";
          } else if (i === nextSection) {
            line.className = "lab-nav-line-inner animated";
          } else {
            line.className = "lab-nav-line-inner completed";
          }
        });
      };

      /***************************** */
      const hash = parseInt(window.location.hash.replace("#", ""), 10);

      let currentSection = -1;
      if (!isNaN(hash) && hash >= 0 && hash < labSections.length) {
        currentSection = hash - 1;
      }

      const moveSectionTo = (newSection) => {
        if (newSection === currentSection) return;

        if (!enableMoveSection) return;
        enableMoveSection = false;

        const direction = newSection > currentSection ? "right" : "left";

        const currentClass =
          direction === "right" ? "deactive-to-left" : "deactive-to-right";
        const nextClass =
          direction === "right" ? "active-from-right" : "active-from-left";

        let nextSection = newSection;

        nextSection = nextSection < 0 ? labSections.length - 1 : nextSection;
        nextSection = nextSection >= labSections.length ? 0 : nextSection;

        labSections.forEach((section, i) => {
          if (i === currentSection) {
            section.className = `lab-section ${currentClass}`;
          } else if (i === nextSection) {
            section.className = `lab-section ${nextClass}`;
            updateInfoSection(section.dataset);
          } else {
            section.className = "lab-section";
          }
        });
        updateLines(nextSection);
        currentSection = nextSection;
      };

      /***************************** */

      labNavBtns.forEach((btn, i) => {
        /* AUTOPLAY **************************** */
        $.ev(btn).on("click", () => {
          moveSectionTo(i);
        });

        /* AUTOPLAY **************************** */
        const line = btn.querySelector(".lab-nav-line-inner");

        $.ev(line).on("animationend", () => {
          moveSectionTo(currentSection + 1);
        });
      });

      /***************************** */
      moveSectionTo(currentSection + 1);

      const btnLeft = $.sel(".lab-btn-left");
      const btnRight = $.sel(".lab-btn-right");

      $.ev(btnLeft).on("click", () => {
        moveSectionTo(currentSection - 1);
      });
      $.ev(btnRight).on("click", () => {
        moveSectionTo(currentSection + 1);
      });
    }
  });
</script>
